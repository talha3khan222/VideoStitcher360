The purpose of scikit-image is to provide a high-quality library of powerful,
diverse image processing tools free of charge and restrictions. These
principles are the foundation for the development practices in the scikit-image
community.

The library is licensed under the *Modified BSD license*, which allows
unrestricted redistribution for any purpose as long as copyright notices
and disclaimers of warranty are maintained [BSD]_. It is compatible with GPL
licenses, so users of scikit-image can choose to make their code available
under the GPL. However, unlike the GPL, it does not require users to
open-source derivative work (BSD is not a so-called copyleft license). Thus,
scikit-image can also be used in closed-source, commercial environments.

The development team of scikit-image is an open community that collaborates on
the *GitHub* [GitHub]_ platform for issue tracking, code review, and release
management. *Google Groups* [GoogleGroups]_ is used as a public discussion
forum for user support, community development, and announcements.

scikit-image complies with the PEP8 coding style standard [PEP8]_ and the NumPy
documentation format [NumpyDoc]_ in order to provide a consistent, familiar user
experience across the library similar to other scientific Python packages. As
mentioned earlier, the data representation used is *n*-dimensional
NumPy arrays, which guarantees universal interoperability
within the scientific Python ecosystem. The majority of the scikit-image API is
intentionally designed as a functional interface which allows one to simply
apply one function to the output of another. This modular approach also lowers the
barrier of entry for new contributors, since one only needs to master a small
part of the entire library in order to make an addition.

We ensure high code quality by a thorough review process using the pull request
interface on GitHub. The source code is mainly written in Python, although
certain performance critical sections are implemented in Cython, an
optimising static compiler for Python
[Cython]_.  scikit-image aims to achieve full unit test coverage, which is above
85% as of release 0.10 and continues to rise. A continuous integration system
([TravisCI]_, [Coveralls]_) automatically checks each commit for unit test
coverage and failures on both Python 2 and Python 3. Additionally, the code is
analyzed by flake8 [flake8]_ to ensure compliance with the PEP8 coding style
standards [PEP8]_. Finally, the properties of each public function are
documented thoroughly in an API reference guide, embedded as Python
docstrings and accessible through the official project homepage or an
interactive
Python console. Short usage examples are
typically included inside the docstrings, and new features are accompanied by longer,
self-contained example scripts added to the narrative documentation and
compiled to a gallery on the project website. We use Sphinx
[Sphinx]_ to automatically generate both library documentation and the website.

The development master branch is fully functional at all times and can be
obtained from GitHub [SourceCode]_. The community releases major updates as
stable versions approximately every six months [Versioning]_. Major releases
include new features, while minor releases typically contain only bug fixes.
Users are notified about API-breaking changes by deprecation warnings one full
major release before they are applied.

References
----------
.. [BSD] http://www.gnu.org/licenses/license-list.html#ModifiedBSD
.. [GitHub] https://github.com/scikit-image/scikit-image
.. [GoogleGroups] https://groups.google.com/forum/?&fromgroups#!forum/scikit-image
.. [Cython] Behnel S, Bradshaw R, Citro C, Dalcin L, Seljebotn DS, and Smith K,
   2011. Cython: The best of both worlds. Computing in Science & Engineering
   13(2):31-39.
.. [TravisCI] https://travis-ci.org
.. [Coveralls] https://coveralls.io
.. [PEP8] http://www.python.org/dev/peps/pep-0008/
.. [NumpyDoc] https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt
.. [flake8] https://pypi.python.org/pypi/flake8
.. [Sphinx] http://sphinx-doc.org/
.. [Versioning] http://en.wikipedia.org/wiki/Software_versioning
.. [SourceCode] https://github.com/scikit-image/scikit-image
